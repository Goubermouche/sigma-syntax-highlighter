{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Sigma",
	"scopeName": "main.s",
	"fileTypes": [
		".s"
	],
	"patterns": [
		{
			"include": "#function_declaration"
		},
		{
			"include": "#function_call"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#custom_types"
		},
		{
			"include": "#keywords_numerical"
		},
		{
			"include": "#constant_numeric"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#string_literals"
		},
		{
			"include": "#char_literals"
		},
		{
			"include": "#boolean_literals"
		},
		{
			"include": "#pragma_directives"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash",
					"match": "\/\/.*"
				}
			]
		},
		"custom_types": {
			"patterns": [
				{
					"name": "storage.type.custom",
					"match": "\\b(?:TypeA|TypeB|TypeC)\\b"
				}
			]
		},
		"keywords_numerical": {
			"patterns": [
				{
					"name": "storage.type.numerical",
					"match": "\\b(?:i8|i16|i32|i64|u8|u16|u32|u64|f32|f64|char|bool|void)\\b"
				}
			]
		},
		"function_declaration": {
			"patterns": [
				{
					"begin": "([\\w:]+\\s*(?:<.*?>)?\\s*[*&]?\\s*)+\\s+([\\w:]+)\\s*(\\()",
					"end": "(\\))\\s*(?:(?=\\{)|;)",
					"beginCaptures": {
						"1": {
							"name": "storage.type.return-type.c"
						},
						"2": {
							"name": "entity.name.function.c"
						},
						"3": {
							"name": "punctuation.section.group.begin.c"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.section.group.end.c"
						}
					},
					"patterns": [
						{
							"include": "#custom_types"
						},
						{
							"include": "#keywords_numerical"
						},
						{
							"name": "variable.parameter.c",
							"match": "\\b([\\w\\s]+)\\s+([\\w]+)(?=,|\\))"
						}
					]
				}
			]
		},
		"function_call": {
			"patterns": [
				{
					"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
					"captures": {
						"1": {
							"name": "entity.name.function.c"
						},
						"2": {
							"name": "punctuation.section.group.begin.c"
						}
					}
				}
			]
		},
		"constant_numeric": {
			"patterns": [
				{
					"match": "\\b\\d+(?:\\.\\d+)?(?:[fu])?\\b",
					"name": "constant.numeric.simple-numeric"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "\\b(?:return|if|else|while|do|for|switch|case|default|break|continue|goto|new)\\b"
				}
			]
		},
		"string_literals": {
			"patterns": [
				{
					"name": "string.quoted.double",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"char_literals": {
			"patterns": [
				{
					"name": "string.quoted.single",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"boolean_literals": {
			"patterns": [
				{
					"name": "constant.language.boolean",
					"match": "\\b(?:true|false)\\b"
				}
			]
		},
		"pragma_directives": {
			"patterns": [
				{
					"name": "keyword.control",
					"match": "#[\\w]+"
				}
			]
		}
	}
}
